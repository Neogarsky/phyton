"""
3.	Есть два файла: в одном хранятся ФИО пользователей сайта, а в другом  — данные об их хобби.
Известно, что при хранении данных используется принцип: одна строка — один пользователь
разделитель между значениями — запятая. Написать код, загружающий данные из обоих файлов
и формирующий из них словарь: ключи — ФИО, значения — данные о хобби. Сохранить словарь в файл.
Проверить сохранённые данные. Если в файле, хранящем данные о хобби, меньше записей
чем в файле с ФИО, задаём в словаре значение None. Если наоборот — выходим из скрипта с кодом «1».
При решении задачи считать, что объём данных в файлах во много раз меньше объема ОЗУ.
"""

from itertools import zip_longest  # имортируем для выявления большего массива

with open('users_f.txt', encoding='utf-8') as f:
    with open('hobby_f.txt', encoding='utf-8') as hobby:
        # определяем больший массив, ставим None если больше при это меняем , на пробел
        all_lst = zip_longest((' '.join(i.split(',')) for i in f), hobby, fillvalue=None)
        with open('out_f.txt', 'w', encoding='utf-8') as result:  # открываем файл с результатом
            for element in all_lst:
                # записываем в файл с резултьатом через цикл
                print(f'{str(element[0]).strip()}: {str(element[1]).strip()}', file=result)

